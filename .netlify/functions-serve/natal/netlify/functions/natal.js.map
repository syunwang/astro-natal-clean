{
  "version": 3,
  "sources": ["file:///D:/astro-natal-clean/netlify/functions/natal.js"],
  "sourceRoot": "C:/Users/ADMIN/AppData/Local/Temp/tmp-45556-3T42aGVAk6K8",
  "sourcesContent": ["// netlify/functions/natal.js\n\nexport async function handler(event) {\n  try {\n    if (event.httpMethod !== \"POST\") {\n      return { statusCode: 405, body: JSON.stringify({ error: \"Method not allowed\" }) };\n    }\n\n    const cfgUrl = process.env.FREEASTRO_API_URL;\n    const cfgKey = process.env.FREEASTRO_API_KEY;\n\n    if (!cfgUrl || !cfgKey) {\n      return {\n        statusCode: 500,\n        body: JSON.stringify({ error: \"Missing FREEASTRO_API_URL or FREEASTRO_API_KEY\" }),\n      };\n    }\n\n    const input = JSON.parse(event.body || \"{}\");\n\n    const payload = {\n      year: input.year,\n      month: input.month,\n      day: input.day,\n      hours: input.hour,\n      minutes: input.minute,\n      seconds: input.seconds || 0,\n      latitude: input.latitude,\n      longitude: input.longitude,\n      timezone: input.timezone,\n      language: input.language || \"en\",\n    };\n\n    // \u2705 \u6B63\u786E\u7684 Header\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${cfgKey}`,\n    };\n\n    const upstream = await fetch(cfgUrl, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(payload),\n    });\n\n    const raw = await upstream.text();\n\n    if (!upstream.ok) {\n      return {\n        statusCode: upstream.status,\n        body: JSON.stringify({\n          error: `NATAL HTTP ${upstream.status}`,\n          providerBody: raw,\n        }),\n      };\n    }\n\n    return {\n      statusCode: 200,\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      body: raw,\n    };\n  } catch (err) {\n    return { statusCode: 500, body: JSON.stringify({ error: String(err) }) };\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,eAAsB,QAAQ,OAAO;AACnC,MAAI;AACF,QAAI,MAAM,eAAe,QAAQ;AAC/B,aAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC,EAAE;AAAA,IAClF;AAEA,UAAM,SAAS,QAAQ,IAAI;AAC3B,UAAM,SAAS,QAAQ,IAAI;AAE3B,QAAI,CAAC,UAAU,CAAC,QAAQ;AACtB,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,OAAO,iDAAiD,CAAC;AAAA,MAClF;AAAA,IACF;AAEA,UAAM,QAAQ,KAAK,MAAM,MAAM,QAAQ,IAAI;AAE3C,UAAM,UAAU;AAAA,MACd,MAAM,MAAM;AAAA,MACZ,OAAO,MAAM;AAAA,MACb,KAAK,MAAM;AAAA,MACX,OAAO,MAAM;AAAA,MACb,SAAS,MAAM;AAAA,MACf,SAAS,MAAM,WAAW;AAAA,MAC1B,UAAU,MAAM;AAAA,MAChB,WAAW,MAAM;AAAA,MACjB,UAAU,MAAM;AAAA,MAChB,UAAU,MAAM,YAAY;AAAA,IAC9B;AAGA,UAAM,UAAU;AAAA,MACd,gBAAgB;AAAA,MAChB,iBAAiB,UAAU,MAAM;AAAA,IACnC;AAEA,UAAM,WAAW,MAAM,MAAM,QAAQ;AAAA,MACnC,QAAQ;AAAA,MACR;AAAA,MACA,MAAM,KAAK,UAAU,OAAO;AAAA,IAC9B,CAAC;AAED,UAAM,MAAM,MAAM,SAAS,KAAK;AAEhC,QAAI,CAAC,SAAS,IAAI;AAChB,aAAO;AAAA,QACL,YAAY,SAAS;AAAA,QACrB,MAAM,KAAK,UAAU;AAAA,UACnB,OAAO,cAAc,SAAS,MAAM;AAAA,UACpC,cAAc;AAAA,QAChB,CAAC;AAAA,MACH;AAAA,IACF;AAEA,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS,EAAE,gBAAgB,kCAAkC;AAAA,MAC7D,MAAM;AAAA,IACR;AAAA,EACF,SAAS,KAAK;AACZ,WAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,OAAO,GAAG,EAAE,CAAC,EAAE;AAAA,EACzE;AACF;",
  "names": []
}
